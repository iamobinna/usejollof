{"version":3,"sources":["components/leftBar/index.jsx","services/driver.js","urls/index.js","signIn/index.jsx","maps/index.jsx","orders/index.jsx","currentPage/index.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Index","currentIndex","setCurrentIndex","setUser","user","useState","open","setOpen","tabs","id","icon","ListAltIcon","name","color","DriveEtaIcon","useEffect","className","style","position","onClick","map","tab","localStorage","removeItem","window","dispatchEvent","Event","driverLogin","credentials","a","axios","post","data","setItem","JSON","stringify","console","log","email","setEmail","password","setPassword","sending","setSending","type","msg","alert","setAlert","submitAction","e","preventDefault","onSubmit","Alert","severity","TextField","required","value","onChange","target","label","variant","Button","toDeliver","from","to","customer","orders","setOrders","order","index","isOpen","arr","i","length","socket","setSocket","first","setFirst","_first","_setFirst","geoID","setGeoID","allowed","setAllowed","lat","lng","location","setLocation","component","Map","Orders","io","query","token","auth_token","navigator","geolocation","permissions","then","result","state","trackLocation","onchange","clearWatch","watchPosition","coords","latitude","longitude","error","emit","userID","_id","lang","marginBottom","parse","getItem","addEventListener","bla","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b55eccc4.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n// import { openInAppLink } from \"../../../services/openLinks\";\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ListAltIcon from '@mui/icons-material/ListAlt';\r\nimport DriveEtaIcon from '@mui/icons-material/DriveEta';\r\nimport LoginIcon from '@mui/icons-material/Login';\r\n// import { signOut } from \"../../../services/axios/account\";\r\nimport \"./styles/style.css\";\r\n\r\nconst Index = ({currentIndex, setCurrentIndex, user, setUser}) => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const tabs = [\r\n        {id: 0 , icon: ListAltIcon, name: \"Orders\", color: 'rgb(0, 158, 66)'},\r\n        {id: 1 , icon: DriveEtaIcon, name: \"Ongoing order\", color: 'rgb(0, 140, 158)'},\r\n        // {id: 2 , icon: LoginIcon, name: \"Sign in\", color: 'rgb(233, 37, 2)'},\r\n    ];\r\n\r\n    const signOut = () => {\r\n        setUser(null);\r\n        localStorage.removeItem('driverData');\r\n        window.dispatchEvent( new Event('sign-out-driver'));\r\n    }\r\n\r\n    useEffect(() => {\r\n        setOpen(false);\r\n    }, [currentIndex]);\r\n\r\n    return (\r\n        <div className=\"delivery-nav-container\">\r\n            <div style={{position:'relative'}} >\r\n                <div onClick={() => setOpen(!open)} className={` ${!open && 'ham-open'} hamburger icon-acitve`}>\r\n                    <MenuIcon/>\r\n                </div>\r\n                <div className={`delivery-boy-nav ${!open && 'delivery-boy-nav-close' } `}>\r\n                    {\r\n                        tabs.map((tab) => (\r\n                                <div onClick={() => setCurrentIndex(tab.id)} className={` ${tab.id === currentIndex && 'delivery-nav-active'} delivery-nav-option`}>\r\n                                    <tab.icon className='' />\r\n                                    <span>{tab.name}</span>\r\n                                </div>\r\n                        ))\r\n                    }\r\n                        <div className={`delivery-logout delivery-nav-option`} onClick={() => signOut()} >\r\n                            <LogoutIcon className='' />\r\n                            <span>Log out</span>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Index;\r\n","import {URL} from '../urls';\r\nimport axios from 'axios';\r\n\r\nexport const driverLogin = async (credentials) => {\r\n    try {\r\n        const {data} = await axios.post(`${URL}/deliveryboy/login`,credentials );\r\n        localStorage.setItem('driverData', JSON.stringify(data));\r\n        window.dispatchEvent( new Event('update-driver-account'));\r\n        return data;\r\n    } catch (error) {\r\n        console.log('error');\r\n        //account creation had some error\r\n        return null;\r\n    }\r\n}","export const URL = '';\r\n// export const URL = 'http://192.168.10.21:5000';\r\n// export const CLIENT_URL = 'http://localhost:3000'\r\nexport const CLIENT_URL = ''","import React, {useState} from 'react';\r\nimport './styles/style.css';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport { driverLogin } from '../services/driver';\r\nimport Alert from '@mui/material/Alert';\r\n\r\n\r\nconst Index = ({user, setUser}) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [sending, setSending] = useState(false);\r\n    const [alert, setAlert] = useState({\r\n        type: '',\r\n        msg: null\r\n    });\r\n\r\n    const submitAction = async (e) => {\r\n        e.preventDefault();\r\n        if(!sending)\r\n        {\r\n            setSending(true);\r\n            const data = await driverLogin({email, password});\r\n            if(data){\r\n                console.log('signin', data);\r\n                setUser(data);\r\n                setAlert({\r\n                    type: 'success',\r\n                    msg: 'Logged in'\r\n                });\r\n                setSending(false);\r\n            }else{\r\n                console.log('error');\r\n                setAlert({\r\n                    type: 'error',\r\n                    msg: 'Wrong credentials'\r\n                });\r\n                setSending(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Sign In</h1>\r\n            <form onSubmit={submitAction} className='delivery-signin' >\r\n                {sending? \r\n                    <Alert severity='info'>\r\n                        Requesting Server...\r\n                    </Alert>\r\n                    :\r\n                    <>\r\n                    {\r\n                        alert.msg &&\r\n                        <Alert severity={alert.type}>\r\n                            {alert.msg}\r\n                        </Alert>\r\n                    }\r\n                    <TextField required value={email} onChange={e => setEmail(e.target.value)} id=\"outlined-basic\" label=\"Email\" type='email' variant=\"outlined\" />\r\n                    <TextField required value={password} onChange={e => setPassword(e.target.value)} id=\"outlined-basic\" label=\"Password\" type='password' variant=\"outlined\" />\r\n                    <Button className='sigin-btn-m' type='submit' variant=\"contained\">Sign In</Button>\r\n                    </>\r\n                }\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import React from 'react';\r\nimport './styles/style.css';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport AccessTimeFilledIcon from '@mui/icons-material/AccessTimeFilled';\r\n\r\n\r\nconst Index = () => {\r\n    return (\r\n        <div className='delivery-boy-orders' >\r\n            <div className=\"map box flex\">\r\n                <h2>MAP</h2>\r\n            </div>\r\n            <div className=\"delivery-order-button flex box\">\r\n                <LocationOnIcon />\r\n                <h5> Pickup Location </h5>\r\n            </div>\r\n            <div className=\"delivery-order-button flex box\">\r\n                <LocationOnIcon />\r\n                <h5> Drop Location </h5>\r\n            </div>\r\n            <div className=\"delivery-order-button flex box red\">\r\n                <AccessTimeFilledIcon/>\r\n                <h5> Posponed order </h5>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Index\r\n","import React, {useState} from 'react';\r\nimport './styles/style.css';\r\nimport DiningIcon from '@mui/icons-material/Dining';\r\nimport ShoppingBagIcon from '@mui/icons-material/ShoppingBag';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport ArrowRightAltIcon from '@mui/icons-material/ArrowRightAlt';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport ExploreIcon from '@mui/icons-material/Explore';\r\n\r\nconst Index = () => {\r\n\r\n    const [orders, setOrders] = useState([\r\n        {id: 0, open: false, toDeliver: 'Burger', from: 'Karachi', to: 'New York, Street 1', customer: 'Shah Fahad'},\r\n        {id: 1, open: false, toDeliver: 'Parcel', from: 'Karachi', to: 'New York, Street 1', customer: 'Shah Fahad'},\r\n        {id: 2, open: false, toDeliver: 'Pizza', from: 'Karachi', to: 'New York, Street 1', customer: 'Shah Fahad'},\r\n        {id: 3, open: false, toDeliver: 'Parcel', from: 'Karachi', to: 'New York, Street 1', customer: 'Shah Fahad'},\r\n    ])\r\n\r\n    const open = (index) => {\r\n        const isOpen = orders[index].open;\r\n        let arr = [...orders];\r\n        if(isOpen){\r\n            arr[index].open = false;\r\n            setOrders(arr);\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n            arr[i].open = false;\r\n        }\r\n\r\n        arr[index].open = true;\r\n        setOrders(arr);\r\n    }\r\n\r\n    return (\r\n        <div className='delivery-boy-orders'>\r\n            <h2>Orders</h2>\r\n            {\r\n                orders.map((order, index) => (\r\n                    <div onClick={() => open(index)} className={`delivery-boy-order box ${order.open && 'delivery-boy-order-active'} `}>\r\n                        <div className=\"flex\">\r\n                        {\r\n                            order.toDeliver === 'Parcel'? \r\n                            <ShoppingBagIcon/>:\r\n                            <DiningIcon/>\r\n                        }\r\n                            <span> {order.toDeliver} </span> \r\n                        </div>\r\n                        <div className=\"flex\">\r\n                            <div className=\"flex\">\r\n                                <LocationOnIcon/>\r\n                                <span> {order.from} </span>\r\n                            </div>\r\n                            <ArrowRightAltIcon/>\r\n                            <div className=\"flex\">\r\n                                <LocationOnIcon style={{color: 'rgb(0, 128, 90)'}} />\r\n                                <span> {order.to} </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex\">\r\n                            <PersonIcon/>\r\n                            <span> {order.customer} </span>\r\n                        </div>\r\n                        <div className=\"delivery-order-button flex box\">\r\n                            <ExploreIcon/>\r\n                            <h5> Start Order </h5>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import React, {useEffect, useState} from \"react\";\r\nimport SignIn from '../signIn';\r\nimport Map from '../maps';\r\nimport Orders from '../orders';\r\nimport './styles/style.css';\r\nimport {io} from 'socket.io-client';\r\nimport Alert from '@mui/material/Alert';\r\nimport { URL } from \"../urls\";\r\n// import {socket} from '../services/socket';\r\n\r\n\r\nconst Index = ({currentIndex, user, setUser}) => {\r\n\r\n    const [socket, setSocket] = useState(null);\r\n    const [first, setFirst] = useState(true);\r\n    const [_first, _setFirst] = useState(true);\r\n    const [geoID, setGeoID] = useState(null);\r\n    const [allowed, setAllowed] = useState(false);\r\n    const [alert, setAlert] = useState(null);\r\n    const [location, setLocation] = useState({\r\n        lat: null,\r\n        lng: null\r\n    });\r\n\r\n    const tabs = [\r\n        // {id: 2, component: SignIn, name: 'Sign In', to: '/' },\r\n        {id: 1, component: Map, name: 'On going', to: '/account' },\r\n        {id: 0, component: Orders, name: 'Orders', to: '/wallet' }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        console.log('driverData', user);\r\n        if(user && first){\r\n            setFirst(false);\r\n            setSocket(io(URL, {\r\n                query: {token: user.auth_token}\r\n            }));\r\n            if (navigator.geolocation) {\r\n                navigator.permissions\r\n                  .query({ name: \"geolocation\" })\r\n                  .then(function (result) {\r\n                    if (result.state === \"granted\") {\r\n                      console.log(result.state);\r\n                      trackLocation();\r\n                      setAllowed(true);\r\n                      \r\n                      //If granted then you can directly call your function here\r\n                    } else if (result.state === \"prompt\") {\r\n                      console.log(result.state);\r\n                      trackLocation();\r\n                      setAllowed(true);\r\n                    } else if (result.state === \"denied\") {\r\n                      //If denied then you have to show instructions to enable location\r\n                      setAlert('Allow location from settings');\r\n                    //   alert(\"Why bro\");\r\n                    }\r\n                    result.onchange = function () {\r\n                      console.log(result.state);\r\n                    };\r\n                  });\r\n              } else {\r\n                  setAlert('Location cannot be shared from your device')\r\n                // alert(\"Sorry Not available!\");\r\n              }\r\n        }\r\n\r\n        if(!user || user === null){\r\n            setFirst(true);\r\n            if(geoID !== null)\r\n                navigator.geolocation.clearWatch(geoID);\r\n        }\r\n    }, [user]);\r\n\r\n    const trackLocation = () => {\r\n        console.log('Setting navigator');\r\n        const id = navigator.geolocation.watchPosition(\r\n        data=> {\r\n            setLocation(\r\n            {\r\n                lat: data.coords.latitude,\r\n                lng: data.coords.longitude\r\n            }\r\n        )\r\n        },\r\n        error => console.log(error)\r\n        );\r\n        setGeoID(id);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(socket){\r\n            socket.emit('serverUpdateDriver', location);\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        if(socket && _first && allowed){\r\n            _setFirst(false);\r\n            \r\n            socket.emit('serverSaveDriver', {\r\n                userID: user.user._id,\r\n                location: {\r\n                    lat: null,\r\n                    lang: null,\r\n                }\r\n            })\r\n        }\r\n    }, [socket, allowed]);\r\n\r\n    if(!user || user.user === null){\r\n        return (\r\n                <div className=\"delivery-main\">\r\n                    <SignIn user={user} setUser={setUser} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"delivery-main\">\r\n            {\r\n                alert &&\r\n                <Alert style={{marginBottom: '10px'}} severity=\"info\">{alert}</Alert>\r\n            }\r\n            {tabs.map((tab) => {\r\n                if (tab.id === currentIndex) {\r\n                    return (\r\n                    <>\r\n                        <tab.component />\r\n                    </>\r\n                    );\r\n                } else return null;\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Index;\r\n","import React, {useState, useEffect} from 'react';\r\nimport LeftBar from './components/leftBar';\r\nimport './styles/style.css';\r\n// import {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport Currentpage from './currentPage';\r\n\r\nconst Index = () => {\r\n\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('driverData'))? JSON.parse(localStorage.getItem('driverData')) : null);\r\n    \r\n    window.addEventListener('sign-out-driver', () => {\r\n        setUser('');\r\n    })\r\n    window.addEventListener('update-account-driver', () => {\r\n        const bla = JSON.parse(localStorage.getItem('driverData'))? JSON.parse(localStorage.getItem('driverData')) : null;\r\n        console.log('bla', bla);\r\n        setUser(bla);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"pwa-container\">\r\n            <div className='pwa' >\r\n                <LeftBar user={user} setUser={setUser} currentIndex={currentIndex} setCurrentIndex={setCurrentIndex}/>\r\n                <Currentpage currentIndex={currentIndex} user={user} setUser={setUser} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport './app.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}