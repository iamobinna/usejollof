{"version":3,"sources":["components/leftBar/index.jsx","urls/index.js","services/driver.js","signIn/index.jsx","svg/van.svg","svg/location.svg","components/distanceMap/index.jsx","maps/index.jsx","services/order.js","orders/index.jsx","currentPage/index.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Index","currentIndex","setCurrentIndex","setUser","user","useState","open","setOpen","tabs","id","icon","ListAltIcon","name","color","DriveEtaIcon","useEffect","className","style","position","onClick","map","tab","localStorage","removeItem","window","dispatchEvent","Event","URL","driverLogin","credentials","a","axios","post","data","setItem","JSON","stringify","console","log","email","setEmail","password","setPassword","sending","setSending","type","msg","alert","setAlert","submitAction","e","preventDefault","onSubmit","Alert","severity","TextField","required","value","onChange","target","label","variant","Button","Map","state","coords","directions","origin","props","startLocation","destination","endLocation","google","maps","DirectionsService","route","this","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","routes","overview_path","setState","error","GoogleMapExample","withGoogleMap","defaultCenter","defaultZoom","path","geodesic","options","strokeColor","strokeOpacity","strokeWeight","clickable","url","van","scaledSize","Size","location","height","width","containerElement","mapElement","Component","currentOrder","setDriverLocation","setStartLocation","setEndLocation","vendorLocation","latLng","MapLoader","withScriptjs","RouteMap","googleMapURL","loadingElement","overflow","borderRadius","userLocation","getOrders","userData","parse","getItem","get","headers","auth_token","_id","getOrder","updateOrder","order","put","orders","setOrders","setCurrentOrder","socket","index","isOpen","arr","i","length","toDeliver","products","foodId","address","delivering","emit","startOrder","setSocket","first","setFirst","_first","_setFirst","geoID","setGeoID","allowed","setAllowed","alreadyOnline","setAlreadyOnline","hasVehicle","setHasVehicle","lat","lng","setLocation","vehicle","io","query","token","trackLocation","disconnect","navigator","geolocation","clearWatch","watchPosition","latitude","longitude","message","setSocketsAndFetchData","userID","lang","on","orderID","checkForOngoingOrders","marginBottom","addEventListener","bla","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.41eac8ea.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n// import { openInAppLink } from \"../../../services/openLinks\";\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ListAltIcon from '@mui/icons-material/ListAlt';\r\nimport DriveEtaIcon from '@mui/icons-material/DriveEta';\r\nimport LoginIcon from '@mui/icons-material/Login';\r\n// import { signOut } from \"../../../services/axios/account\";\r\nimport \"./styles/style.css\";\r\n\r\nconst Index = ({currentIndex, setCurrentIndex, user, setUser}) => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const tabs = [\r\n        {id: 0 , icon: ListAltIcon, name: \"Orders\", color: 'rgb(0, 158, 66)'},\r\n        {id: 1 , icon: DriveEtaIcon, name: \"Ongoing order\", color: 'rgb(0, 140, 158)'},\r\n        // {id: 2 , icon: LoginIcon, name: \"Sign in\", color: 'rgb(233, 37, 2)'},\r\n    ];\r\n\r\n    const signOut = () => {\r\n        setUser(null);\r\n        localStorage.removeItem('driverData');\r\n        window.dispatchEvent( new Event('sign-out-driver'));\r\n    }\r\n\r\n    useEffect(() => {\r\n        setOpen(false);\r\n    }, [currentIndex]);\r\n\r\n    return (\r\n        <div className=\"delivery-nav-container\">\r\n            <div style={{position:'relative'}} >\r\n                <div onClick={() => setOpen(!open)} className={` ${!open && 'ham-open'} hamburger icon-acitve`}>\r\n                    <MenuIcon/>\r\n                </div>\r\n                <div className={`delivery-boy-nav ${!open && 'delivery-boy-nav-close' } `}>\r\n                    {\r\n                        tabs.map((tab) => (\r\n                                <div onClick={() => setCurrentIndex(tab.id)} className={` ${tab.id === currentIndex && 'delivery-nav-active'} delivery-nav-option`}>\r\n                                    <tab.icon className='' />\r\n                                    <span>{tab.name}</span>\r\n                                </div>\r\n                        ))\r\n                    }\r\n                        <div className={`delivery-logout delivery-nav-option`} onClick={() => signOut()} >\r\n                            <LogoutIcon className='' />\r\n                            <span>Log out</span>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Index;\r\n","export const URL = '';\r\n// export const URL = 'http://localhost:5000';\r\n// export const CLIENT_URL = 'http://localhost:3000'\r\nexport const CLIENT_URL = ''","import {URL} from '../urls';\r\nimport axios from 'axios';\r\n\r\nexport const driverLogin = async (credentials) => {\r\n    try {\r\n        const {data} = await axios.post(`${URL}/deliveryboy/login`,credentials );\r\n        localStorage.setItem('driverData', JSON.stringify(data));\r\n        window.dispatchEvent( new Event('update-driver-account'));\r\n        return data;\r\n    } catch (error) {\r\n        console.log('error');\r\n        //account creation had some error\r\n        return null;\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport './styles/style.css';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport { driverLogin } from '../services/driver';\r\nimport Alert from '@mui/material/Alert';\r\n\r\n\r\nconst Index = ({user, setUser}) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [sending, setSending] = useState(false);\r\n    const [alert, setAlert] = useState({\r\n        type: '',\r\n        msg: null\r\n    });\r\n\r\n    const submitAction = async (e) => {\r\n        e.preventDefault();\r\n        if(!sending)\r\n        {\r\n            setSending(true);\r\n            const data = await driverLogin({email, password});\r\n            if(data){\r\n                console.log('signin', data);\r\n                setUser(data);\r\n                setAlert({\r\n                    type: 'success',\r\n                    msg: 'Logged in'\r\n                });\r\n                setSending(false);\r\n            }else{\r\n                console.log('error');\r\n                setAlert({\r\n                    type: 'error',\r\n                    msg: 'Wrong credentials'\r\n                });\r\n                setSending(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Sign In</h1>\r\n            <form onSubmit={submitAction} className='delivery-signin' >\r\n                {sending? \r\n                    <Alert severity='info'>\r\n                        Requesting Server...\r\n                    </Alert>\r\n                    :\r\n                    <>\r\n                    {\r\n                        alert.msg &&\r\n                        <Alert severity={alert.type}>\r\n                            {alert.msg}\r\n                        </Alert>\r\n                    }\r\n                    <TextField required value={email} onChange={e => setEmail(e.target.value)} id=\"outlined-basic\" label=\"Email\" type='email' variant=\"outlined\" />\r\n                    <TextField required value={password} onChange={e => setPassword(e.target.value)} id=\"outlined-basic\" label=\"Password\" type='password' variant=\"outlined\" />\r\n                    <Button className='sigin-btn-m' type='submit' variant=\"contained\">Sign In</Button>\r\n                    </>\r\n                }\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","export default __webpack_public_path__ + \"static/media/van.3d8125c3.svg\";","export default __webpack_public_path__ + \"static/media/location.adf07021.svg\";","/*global google*/\r\nimport React, { Component } from \"react\";\r\nimport {\r\n    withGoogleMap,\r\n    GoogleMap,\r\n    DirectionsRenderer, Marker, Polyline\r\n} from \"react-google-maps\";\r\nimport van from '../../svg/van.svg';\r\nimport location from '../../svg/location.svg';\r\nclass Map extends Component {\r\n    state = {\r\n        coords: null,\r\n        directions: null,\r\n        origin: this.props.startLocation,\r\n        destination: this.props.endLocation\r\n};\r\n\r\ncomponentDidMount() {\r\n    const directionsService = new google.maps.DirectionsService();\r\n\r\n    directionsService.route(\r\n        {\r\n            origin: this.state.origin,\r\n            destination: this.state.destination,\r\n            travelMode: google.maps.TravelMode.DRIVING\r\n        },\r\n        (result, status) => {\r\n            if (status === google.maps.DirectionsStatus.OK) {\r\n                console.log(result);\r\n                const coords = result.routes[0].overview_path;\r\n                this.setState({coords});\r\n                this.setState({\r\n                    directions: result\r\n                });\r\n            } else {\r\n                console.error(`error fetching directions ${result}`);\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\nrender() {\r\n    const GoogleMapExample = withGoogleMap(props => (\r\n        <GoogleMap\r\n            defaultCenter={this.state.origin}\r\n            defaultZoom={13}\r\n        >\r\n            <Polyline\r\n            path={this.state.coords}\r\n            geodesic={true}\r\n            options={{\r\n              strokeColor: \"rgb(0,100,200)\",\r\n              strokeOpacity: 0.8,\r\n              strokeWeight: 5,\r\n              clickable: true\r\n            }}\r\n          />\r\n            {/* <DirectionsRenderer\r\n                directions={this.state.directions}\r\n            />*/}\r\n            <Marker icon={{\r\n                url: van,\r\n                scaledSize: new google.maps.Size(25, 25)\r\n            }} position={this.state.origin} />\r\n            <Marker icon={{\r\n                url: location,\r\n                scaledSize: new google.maps.Size(25, 25)\r\n            }} position={this.state.destination} />\r\n        </GoogleMap>\r\n    ));\r\n\r\n    return (\r\n        <div style={{height: `100%`, width: \"100%\"}} >\r\n            <GoogleMapExample\r\n                containerElement={<div style={{ height: `100%`, width: \"100%\" }} />}\r\n                mapElement={<div style={{ height: `100%` }} />}\r\n            />\r\n        </div>\r\n\r\n\r\n       );\r\n    }\r\n}\r\n\r\nexport default Map;","import React, {useState, useEffect} from 'react';\r\nimport './styles/style.css';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport AccessTimeFilledIcon from '@mui/icons-material/AccessTimeFilled';\r\nimport RouteMap from '../components/distanceMap';\r\nimport { withScriptjs } from \"react-google-maps\";\r\n\r\n\r\nconst Index = ({location, currentOrder}) => {\r\n\r\n    const [driverLocation, setDriverLocation] = useState('');\r\n    const [startLocation, setStartLocation] = useState('');\r\n    const [endLocation, setEndLocation] = useState('')\r\n    \r\n    useEffect(() => {\r\n        setDriverLocation(location);\r\n        setStartLocation(location);\r\n        setEndLocation(currentOrder.vendorLocation.latLng);\r\n    }, []);\r\n\r\n    const startingLocation = () => {\r\n        // setStartLocation(driverLocation);\r\n        setEndLocation(currentOrder.vendorLocation.latLng);\r\n    }\r\n\r\n    const endingLocation = () => {\r\n        // setStartLocation(currentOrder.vendorLocation.latLng);\r\n        setEndLocation(currentOrder.userLocation.latLng);\r\n    }\r\n\r\n    const MapLoader = withScriptjs(RouteMap);\r\n    return (\r\n        <div className='delivery-boy-orders' >\r\n            <div className=\"map box flex\">\r\n                {\r\n                    console.log('redered')\r\n                }\r\n                <MapLoader\r\n                    googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD2N-yXRMJCZoNUsjJBlgwpH90NjjNWowI\"\r\n                    loadingElement={<div style={{ height: `100%`, overflow: 'hidden', borderRadius: '20px', position: 'relative' }} />}\r\n                    startLocation={startLocation} endLocation={endLocation}\r\n                />\r\n                {/* </ScriptLoaded> */}\r\n            </div>\r\n            <div className=\"delivery-order-button flex box\" onClick={() => startingLocation()} >\r\n                <LocationOnIcon />\r\n                <h5> Pickup Location </h5>\r\n            </div>\r\n            <div className=\"delivery-order-button flex box\" onClick={() => endingLocation() } >\r\n                <LocationOnIcon />\r\n                <h5> Drop Location </h5>\r\n            </div>\r\n            <div className=\"delivery-order-button flex box red\">\r\n                <AccessTimeFilledIcon/>\r\n                <h5> Posponed order </h5>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Index\r\n","import {URL} from '../urls';\r\nimport axios from 'axios';\r\n\r\nexport const createOrder = async (_data) => {\r\n    try {\r\n        const userData = JSON.parse(localStorage.getItem('driverData'));\r\n        const {data} = await axios.post(`${URL}/order/create`, _data, {\r\n            headers:{\r\n                'auth-token': userData.auth_token\r\n            }\r\n        });\r\n\r\n        console.log('data', data);\r\n        return data;\r\n    } catch (error) {\r\n        //account creation had some error\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const getOrders = async () => {\r\n    try {\r\n        const userData = JSON.parse(localStorage.getItem('driverData'));\r\n        const {data} = await axios.get(`${URL}/order/`, {headers:\r\n            {\r\n                'auth-token': userData.auth_token,\r\n                'driver-id': userData.user._id\r\n            }\r\n        });\r\n\r\n        console.log('data', data);\r\n        return data;\r\n    } catch (error) {\r\n        //account creation had some error\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const getOrder = async (id) => {\r\n    try {\r\n        const userData = JSON.parse(localStorage.getItem('driverData'));\r\n        const {data} = await axios.get(`${URL}/order/get`, {headers:\r\n            {\r\n                'auth-token': userData.auth_token,\r\n                'order-id': id\r\n            }\r\n        });\r\n\r\n        console.log('data', data);\r\n        return data;\r\n    } catch (error) {\r\n        //account creation had some error\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nexport const updateOrder = async (order) => {\r\n    try {\r\n        const userData = JSON.parse(localStorage.getItem('driverData'));\r\n        const {data} = await axios.put(`${URL}/order/update`, order, {\r\n            headers:{\r\n                'auth-token': userData.auth_token\r\n            }\r\n        });\r\n\r\n        console.log('data', data);\r\n        return data;\r\n    } catch (error) {\r\n        //account creation had some error\r\n        return null;\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport './styles/style.css';\r\nimport DiningIcon from '@mui/icons-material/Dining';\r\nimport ShoppingBagIcon from '@mui/icons-material/ShoppingBag';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport ArrowRightAltIcon from '@mui/icons-material/ArrowRightAlt';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport ExploreIcon from '@mui/icons-material/Explore';\r\nimport Alert from '@mui/material/Alert';\r\nimport { updateOrder } from '../services/order';\r\n\r\n\r\nconst Index = ({orders, setOrders, currentOrder, setCurrentOrder, socket}) => {\r\n\r\n    const open = (index) => {\r\n        const isOpen = orders[index].open;\r\n        let arr = [...orders];\r\n        if(isOpen){\r\n            arr[index].open = false;\r\n            setOrders(arr);\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n            arr[i].open = false;\r\n        }\r\n\r\n        arr[index].open = true;\r\n        setOrders(arr);\r\n    }\r\n\r\n    const startOrder = (index) => {\r\n        if(currentOrder === null){\r\n            //there are no orders\r\n            setCurrentOrder(orders[index]);\r\n            updateOrder({...orders[index], delivering: true});\r\n            //remove driver from socket list\r\n            if(socket){\r\n                socket.emit('ongoing order');\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='delivery-boy-orders'>\r\n            <h2>Orders</h2>\r\n            {\r\n                currentOrder? <Alert severity='info' >You have an ongoing order, swith to \"On going order TAB\"</Alert>:\r\n                <>\r\n                {\r\n                    orders.map((order, index) => (\r\n                        <div onClick={() => open(index)} className={`delivery-boy-order box ${order.open && 'delivery-boy-order-active'} `}>\r\n                            <div className=\"flex\">\r\n                            {\r\n                                order.toDeliver === 'Parcel'? \r\n                                <ShoppingBagIcon/>:\r\n                                <DiningIcon/>\r\n                            }\r\n                                <span> {order.products.foodId.name} </span> \r\n                            </div>\r\n                            <div className=\"flex\">\r\n                                <div className=\"flex\">\r\n                                    <LocationOnIcon/>\r\n                                    <span> {order.vendorLocation.address} </span>\r\n                                </div>\r\n                                <ArrowRightAltIcon/>\r\n                                <div className=\"flex\">\r\n                                    <LocationOnIcon style={{color: 'rgb(0, 128, 90)'}} />\r\n                                    <span> {order.userLocation.address} </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"flex\">\r\n                                <PersonIcon/>\r\n                                <span> {order.user} </span>\r\n                            </div>\r\n                            <div className=\"delivery-order-button flex box\" onClick={() => startOrder(index)} >\r\n                                <ExploreIcon/>\r\n                                <h5> Start Order </h5>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import React, {useEffect, useState} from \"react\";\r\nimport SignIn from '../signIn';\r\nimport Map from '../maps';\r\nimport Orders from '../orders';\r\nimport './styles/style.css';\r\nimport {io} from 'socket.io-client';\r\nimport Alert from '@mui/material/Alert';\r\nimport { URL } from \"../urls\";\r\nimport {getOrder, getOrders} from '../services/order';\r\n// import {socket} from '../services/socket';\r\n\r\n\r\nconst Index = ({currentIndex, user, setUser}) => {\r\n\r\n    const [currentOrder, setCurrentOrder] = useState(null);\r\n\r\n    const [orders, setOrders] = useState([]);\r\n    const [socket, setSocket] = useState(null);\r\n    const [first, setFirst] = useState(true);\r\n    const [_first, _setFirst] = useState(true);\r\n    const [geoID, setGeoID] = useState(null);\r\n    const [allowed, setAllowed] = useState(true);\r\n    const [alert, setAlert] = useState(null);\r\n    const [alreadyOnline, setAlreadyOnline] = useState(false);\r\n    const [hasVehicle, setHasVehicle] = useState(true);\r\n    const [location, setLocation] = useState({\r\n        lat: null,\r\n        lng: null\r\n    });\r\n\r\n    const tabs = [\r\n        // {id: 2, component: SignIn, name: 'Sign In', to: '/' },\r\n        {id: 1, component: Map, name: 'On going', to: '/account' },\r\n        {id: 0, component: Orders, name: 'Orders', to: '/wallet' }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        console.log('driverData', user);\r\n        if(user && first){\r\n            let vehicle = true;\r\n            if(!user.user.vehicle || user.user.vehicle === null){\r\n                setHasVehicle(false);\r\n                vehicle = false;\r\n                setAlert('You have not been assigned a vehicle ask partner to assign you one')\r\n            }\r\n            console.log('vehicle',user.user)\r\n            setFirst(false);\r\n            if(vehicle){\r\n                console.log('setting socket');\r\n                setSocket(io(URL,{\r\n                    query: {token: user.auth_token}\r\n                }));\r\n                trackLocation();\r\n            }\r\n        }\r\n\r\n        if(!user || user === null){\r\n            setFirst(true);\r\n            if(socket !== null){\r\n                console.log('logout fired');\r\n                socket.disconnect();\r\n                setSocket(null);\r\n            }\r\n            if(geoID !== null)\r\n                navigator.geolocation.clearWatch(geoID);\r\n        }\r\n    }, [user]);\r\n\r\n    const trackLocation = () => {\r\n        console.log('Setting navigator');\r\n        const id = navigator.geolocation.watchPosition(\r\n        data=> {\r\n            setLocation(\r\n            {\r\n                lat: data.coords.latitude,\r\n                lng: data.coords.longitude\r\n            }\r\n        )\r\n        },\r\n        error => {console.log(error); setAllowed(false); setAlert(error.message) }\r\n        );\r\n        setGeoID(id);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(socket){\r\n            socket.emit('serverUpdateDriver', location);\r\n        }\r\n    }, [location]);\r\n\r\n    const setSocketsAndFetchData = async () => {\r\n        socket.emit('serverSaveDriver', {\r\n            userID: user.user._id,\r\n            location: {\r\n                lat: null,\r\n                lang: null,\r\n            }\r\n        });\r\n    \r\n        socket.on('already-online', () => {\r\n            setAlert(`Your ID is logged in somewhere else, if it's not you contact admin`);\r\n            setAlreadyOnline(true);\r\n        });\r\n    \r\n        socket.on('get-delivery', async (order) => {\r\n            console.log('order id',order);\r\n            const data = await getOrder(order.orderID);\r\n            if(data){\r\n                if(orders){\r\n                    setOrders(orders => [...orders, data]);\r\n                }else{\r\n                    setOrders(data);\r\n                }\r\n            }\r\n        });\r\n\r\n        const data = await getOrders();\r\n        if(data){\r\n            checkForOngoingOrders(data);\r\n            setOrders(data);\r\n        }\r\n    }\r\n\r\n    function checkForOngoingOrders(data){\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i].delivering === true){\r\n                setCurrentOrder(data[i]);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(socket && _first && allowed){\r\n            _setFirst(false);\r\n            setSocketsAndFetchData();\r\n        }\r\n    }, [socket, allowed]);\r\n\r\n    if(!user || user.user === null){\r\n        return (\r\n                <div className=\"delivery-main\">\r\n                    <SignIn user={user} setUser={setUser} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"delivery-main\">\r\n            {\r\n                alert &&\r\n                <Alert style={{marginBottom: '10px'}} severity=\"info\">{alert}</Alert>\r\n            }\r\n            {\r\n                (alreadyOnline || !hasVehicle)? <></>:\r\n                <>\r\n                {\r\n                    currentIndex === 1 && <Map socket={socket} location={location} currentOrder={currentOrder}/>\r\n                }\r\n                {\r\n                    currentIndex === 0 && <Orders socket={socket} currentOrder={currentOrder} setCurrentOrder={setCurrentOrder} orders={orders} setOrders={setOrders}/>\r\n                }\r\n                </> \r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Index;\r\n","import React, {useState, useEffect} from 'react';\r\nimport LeftBar from './components/leftBar';\r\nimport './styles/style.css';\r\n// import {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport Currentpage from './currentPage';\r\n\r\nconst Index = () => {\r\n\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('driverData'))? JSON.parse(localStorage.getItem('driverData')) : null);\r\n    \r\n    window.addEventListener('sign-out-driver', () => {\r\n        setUser('');\r\n    })\r\n    window.addEventListener('update-account-driver', () => {\r\n        const bla = JSON.parse(localStorage.getItem('driverData'))? JSON.parse(localStorage.getItem('driverData')) : null;\r\n        console.log('bla', bla);\r\n        setUser(bla);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"pwa-container\">\r\n            <div className='pwa' >\r\n                <LeftBar user={user} setUser={setUser} currentIndex={currentIndex} setCurrentIndex={setCurrentIndex}/>\r\n                <Currentpage currentIndex={currentIndex} user={user} setUser={setUser} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport './app.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}